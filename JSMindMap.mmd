Mind Map generated by NB MindMap plugin   
> __version__=`1.1`,showJumps=`true`
---

# JavaScript

## language

### 数据类型

#### 标准内置对象

##### 基本对象

###### Object

####### 方法

######## Object\.entries\(obj\)
- NOTE
<pre>该方法返回对象的键/值对数组</pre>

######## Object\.fromEntries\(\)
- NOTE
<pre>给定一个具有 [key, value] 键值对的数组，它会根据给定数组创建一个基本对象</pre>

##### 可索引的集合对象

###### 数组\[Array\]
> collapsed=`true`

- LINK
<pre>https://zh.javascript.info/array</pre>

####### 概念
> collapsed=`true`


######## 用来存储有序的集合

######## 元素从 0 开始编号

######## 可以替换元素

######## 可以存储任何类型的元素

####### 方法
> collapsed=`true`

- LINK
<pre>https://zh.javascript.info/array-methods</pre>

######## 添加/删除元素
> collapsed=`true`


######### push\(\.\.\.items\)
- NOTE
<pre>向尾端添加元素</pre>

######### pop\(\)
- NOTE
<pre>从尾端提取一个元素</pre>

######### shift\(\)
- NOTE
<pre>从首端提取一个元素</pre>

######### unshift\(\.\.\.items\)
- NOTE
<pre>向首端添加元素</pre>

######### splice\(pos, deleteCount, \.\.\.items\)
- NOTE
<pre>从 pos 开始删除 deleteCount 个元素，并插入 items。
该方法修改数组本身</pre>

######### slice\(start, end\)
- NOTE
<pre>创建一个新数组，将从索引 start 到索引 end（但不包括 end）的元素复制进去</pre>

######### concat\(\.\.\.items\)
- NOTE
<pre>返回一个新数组：复制当前数组的所有元素，并向其中添加 items。如果 items 中的任意一项是一个数组，那么就取其元素</pre>

######## 搜索元素
> collapsed=`true`


######### indexOf/lastIndexOf\(item, pos\)
- NOTE
<pre>从索引 pos 开始搜索 item，搜索到则返回该项的索引，否则返回 -1</pre>

######### includes\(value\)
- NOTE
<pre>如果数组有 value，则返回 true，否则返回 false</pre>

######### find/filter\(func\)
- NOTE
<pre>通过 func 过滤元素，返回使 func 返回 true 的第一个值/所有值</pre>

######### findIndex\(func\)
- NOTE
<pre>和find 类似，但返回索引而不是值</pre>

######## 遍历元素
> collapsed=`true`


######### forEach\(func\)
- NOTE
<pre>对每个元素都调用 func，不返回任何内容</pre>

######## 转换数组
> collapsed=`true`


######### map\(func\)
- NOTE
<pre>根据对每个元素调用 func 的结果创建一个新数组</pre>

######### sort\(func\)
- NOTE
<pre>对数组进行原位（in-place）排序，然后返回它</pre>

######### reverse\(\)
- NOTE
<pre>原位（in-place）反转数组，然后返回它</pre>

######### split/join
- NOTE
<pre>将字符串转换为数组并返回</pre>

######### reduce/reduceRight\(func, initial\)
- NOTE
<pre>通过对每个元素调用 func 计算数组上的单个值，并在调用之间传递中间结果</pre>

######## 其他
> collapsed=`true`


######### Array\.isArray\(arr\)
- NOTE
<pre> 检查 arr 是否是一个数组</pre>

######## 注意事项
> collapsed=`true`


######### sort，reverse 和 splice 方法修改的是数组本身

##### 使用键的集合对象

###### 映射\[Map\]
> collapsed=`true`


####### 概念
> collapsed=`true`


######## 是一个带键的数据项的集合，就像一个 Object 一样。 但是它们最大的差别是 Map 允许任何类型的键（key）

####### 方法
> collapsed=`true`


######## new Map\(\[iterable\]\)
- NOTE
<pre>创建 map，可选择带有 [key,value] 对的 iterable（例如数组）来进行初始化。</pre>

######## map\.set\(key, value\)
- NOTE
<pre>根据键存储值</pre>

######## map\.get\(key\)
- NOTE
<pre>根据键来返回值，如果 map 中不存在对应的 key，则返回 undefined</pre>

######## map\.has\(key\)
- NOTE
<pre>如果 key 存在则返回 true，否则返回 false</pre>

######## map\.delete\(key\)
- NOTE
<pre>删除指定键的值</pre>

######## map\.clear\(\)
- NOTE
<pre>清空 map</pre>

######## map\.size
- NOTE
<pre>返回当前元素个数</pre>

###### 集合\[Set\]
> collapsed=`true`


####### 概念
> collapsed=`true`


######## 是一组唯一值的集合
